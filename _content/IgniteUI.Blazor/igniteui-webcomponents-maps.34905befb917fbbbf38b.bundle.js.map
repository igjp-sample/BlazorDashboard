{"version":3,"file":"igniteui-webcomponents-maps.34905befb917fbbbf38b.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tln(): void {\r\n\t\tsuper.ln();\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.ln();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.qa = this.p9();\r\n\t}\r\n\tprivate p8: Series = null;\r\n\tprotected get_dw(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\thy(a: any, b: string): any {\r\n\t\tlet c = this.js(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.qa.hy(a, b);\r\n\t}\r\n\tc1(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.qa.c1(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.qa.ag();\r\n\t}\r\n\tbe(): Series {\r\n\t\treturn this.qa;\r\n\t}\r\n\tget qa(): Series {\r\n\t\treturn this.p8;\r\n\t}\r\n\tset qa(a: Series) {\r\n\t\tlet b: boolean = this.qa != a;\r\n\t\tif (b) {\r\n\t\t\tthis.p8 = a;\r\n\t\t\tthis.qf();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.qa.hasMarkers;\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tif (this.p8 != null) {\r\n\t\t\tlet hostedSeries_ = this.p8;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.k5(this.qa);\r\n\t\tthis.qb.b2();\r\n\t}\r\n\taw(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.ay(this.qa, a, b, c);\r\n\t}\r\n\tax(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.az(this.qa, a, b, c);\r\n\t}\r\n\thv(a: Point): any {\r\n\t\treturn this.h0(this.qa, a);\r\n\t}\r\n\thl(a: Point, b: boolean): number {\r\n\t\treturn this.qa.hl(a, b);\r\n\t}\r\n\thj(a: Point, b: boolean): number {\r\n\t\treturn this.qa.hj(a, b);\r\n\t}\r\n\tgl(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gl(a, b, c);\r\n\t}\r\n\tpq(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pq(a, b, c);\r\n\t}\r\n\tpz(a: Point): Rect {\r\n\t\treturn this.qa.pz(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.qa.ak(a);\r\n\t}\r\n\tp0(a: Point): Rect {\r\n\t\treturn this.qa.p0(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.qa.al(a);\r\n\t}\r\n\tp1(a: Point): Rect {\r\n\t\treturn this.qa.p1(a);\r\n\t}\r\n\tp2(a: Point): Rect {\r\n\t\treturn this.qa.p2(a);\r\n\t}\r\n\tgh(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gh(a, b, c);\r\n\t}\r\n\tpm(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pm(a, b, c);\r\n\t}\r\n\tgj(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.gl(a, b, c);\r\n\t}\r\n\tpo(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.po(a, b, c);\r\n\t}\r\n\tpr(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pr(a, b, c);\r\n\t}\r\n\tgm(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gm(a, b, c);\r\n\t}\r\n\tpn(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pn(a, b, c);\r\n\t}\r\n\tgi(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gi(a, b, c);\r\n\t}\r\n\tpp(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.qa.pp(a, b, c);\r\n\t}\r\n\tgk(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.qa.gk(a, b, c);\r\n\t}\r\n\thg(a: Point): number {\r\n\t\treturn this.qa.hg(a);\r\n\t}\r\n\tgc(): number {\r\n\t\treturn this.qa.gc();\r\n\t}\r\n\tf8(a: Point): number {\r\n\t\treturn this.qa.f8(a);\r\n\t}\r\n\thw(a: Point): any {\r\n\t\treturn this.qa.hw(a);\r\n\t}\r\n\tprotected abstract p9(): Series;\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qb = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tqb: HostSeriesView;\r\n\tstatic readonly qh: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget qc(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.qh);\r\n\t}\r\n\tset qc(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.qh, a);\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qa.cd = this.cd;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).op(this.qa);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.cd.lk(this.qa);\r\n\t\t\t}\r\n\t\t\tthis.qa.ma(this.p3);\r\n\t\t\tthis.qa.index = this.index;\r\n\t\t\tthis.lb(this.qa);\r\n\t\t\tthis.hq = this.qa.hq;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.qg));\r\n\t\t\t}\r\n\t\t\tif (this.cd != null) {\r\n\t\t\t\tlet f = this.cd;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.qg));\r\n\t\t\t}\r\n\t\t\tthis.qe();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.qa.b8 = this.b8;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.qe();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.qa.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.qb.b3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.qb.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.qb.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.qb.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.qa;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.qa.em = this.em;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.qa.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.qb.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.qb.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.qb.b9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.qb.by();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.qb.bz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.gs)) {\r\n\t\t\t\tthis.qb.b6();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.f1)) {\r\n\t\t\t\tthis.qb.b0();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.qb.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.qb.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.qa.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.qb.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.qb.b5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.qa.legend = this.legend;\r\n\t\t\tthis.b0.at();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate qe(): void {\r\n\t\tif (this.cd == null || this.qa == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.qc)) {\r\n\t\t\tif (this.cd.s9.width > this.qc) {\r\n\t\t\t\tlet hs_ = this.qa;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.qa;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate qg(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.qe();\r\n\t}\r\n\tml(a: boolean): void {\r\n\t\tsuper.ml(a);\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.ml(a);\r\n\t\t}\r\n\t}\r\n\tmk(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.qa != null) {\r\n\t\t\tthis.qa.mk(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tat(a: Point, b: boolean): DataContext {\r\n\t\treturn this.qa.at(a, b);\r\n\t}\r\n\tmv(): void {\r\n\t\tsuper.mv();\r\n\t\tthis.qa.mv();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.qa.coercionMethods = a;\r\n\t}\r\n\tprotected la(a: any): void {\r\n\t\tsuper.la(a);\r\n\t\tif (this.qa != null) {\r\n\t\t\tlet b = this.qa.hu();\r\n\t\t\tthis.k2(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.bx = a;\r\n\t}\r\n\tprivate bx: GeographicMapSeriesHost = null;\r\n\tar(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.ar(a, b);\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.bx.p7 = 1;\r\n\t\tthis.bx.qa.p7 = 0;\r\n\t\tthis.bx.qa.itemsSource = this.bx.itemsSource;\r\n\t\tthis.bx.qa.index = this.bx.index;\r\n\t\tthis.bx.qa.o7 = this.bx.o7;\r\n\t\tthis.bx.qa.pc = this.bx.o7;\r\n\t\tthis.bx.qa.bt = this.bx.bt;\r\n\t\tthis.bx.qa.gv = this.bx.gv;\r\n\t\tthis.bx.qa.ho = this.bx.ho;\r\n\t\tthis.bx.qa._opacity = this.bx._opacity;\r\n\t\tthis.bx.qa.g1 = this.bx.g1;\r\n\t\tthis.bx.qa.f1 = this.bx.f1;\r\n\t\tthis.bx.qa.gs = this.bx.gs;\r\n\t\tthis.bx.qa.et = this.bx.et;\r\n\t\tthis.bx.qa.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t\tthis.bx.qa.a9 = this.bx.a9;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.bx.qa.itemsSource = this.bx.itemsSource;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.bx.qa.gv = this.bx.gv;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.bx.qa.ho = this.bx.ho;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.bx.qa._opacity = this.bx._opacity;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.bx.qa.g1 = this.bx.g1;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.bx.qa.o7 = this.bx.o7;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.bx.qa.pc = this.bx.pc;\r\n\t}\r\n\tby(): void {\r\n\t\tthis.bx.qa.o7 = this.bx.o3;\r\n\t}\r\n\tbz(): void {\r\n\t\tthis.bx.qa.pc = this.bx.o6;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.bx.qa.a9 = this.bx.a9;\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.bx.qa.legendItemBadgeShape = this.bx.legendItemBadgeShape;\r\n\t}\r\n\tb0(): void {\r\n\t\tthis.bx.qa.f1 = this.bx.f1;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.bx.qa.gs = this.bx.gs;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.bx.qa.bt = this.bx.bt;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.bx.qa.et = this.bx.et;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.qa;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.qy));\r\n\t}\r\n\tnh(): DataTemplate {\r\n\t\treturn this.qz;\r\n\t}\r\n\tpa(): Brush {\r\n\t\treturn this.rc;\r\n\t}\r\n\tpb(): Brush {\r\n\t\treturn this.rd;\r\n\t}\r\n\tf4(): number {\r\n\t\treturn this.ql;\r\n\t}\r\n\ti0(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qa);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i0();\r\n\t}\r\n\tprivate qy(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.qz = c.q1;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.rd = c.ri;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.rc = c.rh;\r\n\t\t}\r\n\t}\r\n\tqk: MarkerType;\r\n\tql: number;\r\n\tqj: MarkerOutlineMode;\r\n\tqi: MarkerFillMode;\r\n\tq0: DataTemplate;\r\n\tre: Brush;\r\n\trf: Brush;\r\n\tqm: number;\r\n\tqz: DataTemplate;\r\n\trc: Brush;\r\n\trd: Brush;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).rj = this.re;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qa).rk = this.rf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qa).qe = this.qj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qa).qa = this.qi;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.qa).qh = this.qk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.qa).q3 = this.q0;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.qa).qm = this.ql;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.qa).s2 = this.qm;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:rc:q1', [ (<any>Brush).$ ], 'ActualMarkerOutline:rd:q2', [ (<any>Brush).$ ], 'ActualMarkerTemplate:qz:q3', [ (<any>DataTemplate).$, null ], 'MarkerBrush:re:q4', [ (<any>Brush).$ ], 'MarkerFillMode:qi:q5', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:qj:q6', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:rf:q7', [ (<any>Brush).$ ], 'MarkerTemplate:q0:q8', [ (<any>DataTemplate).$, null ], 'MarkerThickness:ql:q9', [ 1, DeviceUtils.g(2) ], 'MarkerType:qk:ra', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:qm:rb', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tql: GeographicShapeSeriesBaseView;\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.ql = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tq3: string;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_c2(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tqs: boolean;\r\n\tqr: boolean;\r\n\tprotected qq: boolean = false;\r\n\tprotected qp: boolean = false;\r\n\tqk: ShapeItemSearchMode;\r\n\tqv: number;\r\n\tqu: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ql.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.ql.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.ql.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).q9 = this.qs;\r\n\t\t\tthis.qq = this.qs;\r\n\t\t\tif (this.qs) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.q6));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.q6));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).q8 = this.qr;\r\n\t\t\tthis.qp = this.qr;\r\n\t\t\tif (this.qs) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.q5));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.qa);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.q5));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).qv = this.qk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).rq = this.qu;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.qa).rr = this.qv;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.qo) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.q7));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.q8();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.qo = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.q7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate q6(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q5(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q7(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.q8();\r\n\t}\r\n\tprivate q8(): void {\r\n\t\tlet sds_ = this.qn;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate qm: ShapefileConverter = null;\r\n\tprivate qo: boolean = false;\r\n\tget qn(): ShapefileConverter {\r\n\t\treturn this.qm;\r\n\t}\r\n\tset qn(a: ShapefileConverter) {\r\n\t\tlet b = this.qm;\r\n\t\tthis.qm = a;\r\n\t\tif (b != this.qm) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.qm);\r\n\t\t}\r\n\t}\r\n\tqt: number;\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:qr:q9', [ 0, false ], 'IsCustomShapeStyleAllowed:qs:ra', [ 0, false ], 'ItemSearchMode:qk:rb', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:qu:rc', [ 1, 10000 ], 'ItemSearchThreshold:qv:rd', [ 1, 10000 ], 'ShapeFilterResolution:qt:re', [ 1, 2 ], 'ShapeMemberPath:q3:rf', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicShapeSeriesBase = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ShapeSeriesBase>this.ce.qa).r1 = this.ce.q3;\r\n\t}\r\n\tcf(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.qp = null;\r\n\t\t\ta.qr = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qp = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.qr = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qa).r1 = this.ce.q3;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ShapeSeriesBase>this.ce.qa).rn = this.ce.qt;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.sv = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_rb(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected sv: TileSeriesView;\r\n\tget sz(): GeographicMapImagery {\r\n\t\treturn this.sx;\r\n\t}\r\n\tset sz(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.sz;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.sz;\r\n\t\t\tthis.sx = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate sx: GeographicMapImagery = null;\r\n\tprivate sw: GeographicMapImagery = null;\r\n\tprotected get sy(): GeographicMapImagery {\r\n\t\treturn this.sw;\r\n\t}\r\n\tprotected set sy(a: GeographicMapImagery) {\r\n\t\tlet b = this.sw;\r\n\t\tthis.sw = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.sw);\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.s4));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.s4));\r\n\t\t\t}\r\n\t\t\tthis.sv.de(e, f);\r\n\t\t\tthis.ml(false);\r\n\t\t\tthis.ls();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.s5));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.s5));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.sv.dd(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.cd) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.cd;\r\n\t\t\t\tthis.s7(this.b0);\r\n\t\t\t\tthis.sv.da(this.cd.s9);\r\n\t\t\t}\r\n\t\t\tthis.ls();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.sv.da(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.sv.dh(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.sy != null) {\r\n\t\t\t\tthis.sy.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.sy != null) {\r\n\t\t\t\tthis.sy.be(this.b0.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.lu();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate s4(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.s7(this.b0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate s5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.s1) {\r\n\t\t\tthis.sv.df();\r\n\t\t}\r\n\t}\r\n\tprivate s0: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.s0 = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.s0 = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.ml(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.hb != null) {\r\n\t\t\tthis.hb.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected m8(a: Rect, b: Rect): void {\r\n\t\tthis.sv.dg();\r\n\t\tsuper.m8(a, b);\r\n\t}\r\n\tprivate s1: boolean = false;\r\n\tmm(a: boolean): void {\r\n\t\tsuper.mm(a);\r\n\t\tthis.s6(a, this.b0);\r\n\t}\r\n\tprotected s6(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.s7(b);\r\n\t\tif (this.s0 != null) {\r\n\t\t\tthis.s1 = true;\r\n\t\t\tthis.s0(a);\r\n\t\t\tthis.s1 = false;\r\n\t\t}\r\n\t\te.df();\r\n\t}\r\n\tmk(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.mk(a, b, c, d, e);\r\n\t\tlet f = this.fe.item(d);\r\n\t\tf.a1(c);\r\n\t\tif (this.cx(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.sf(f);\r\n\t}\r\n\tprivate s7(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.sz != null && this.sz.ao != null) {\r\n\t\t\tif (this.sz != this.sy) {\r\n\t\t\t\tthis.sy = this.sz;\r\n\t\t\t}\r\n\t\t\tif (this.sy != null && !b.isEmpty) {\r\n\t\t\t\tif (this.sy.width != b.width) {\r\n\t\t\t\t\tthis.sy.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.sy.height != b.height) {\r\n\t\t\t\t\tthis.sy.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tk0(a: boolean, b: SeriesView): void {\r\n\t\tsuper.k0(a, b);\r\n\t\t(<TileSeriesView>b).db();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c7 = a;\r\n\t}\r\n\tprotected c7: TileSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.c7.pc = Defaults.ao;\r\n\t\t\tthis.c7.o7 = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ch(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.di.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c2(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c3(a, b, true);\r\n\t}\r\n\tprotected c1(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected cl(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcj(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate di: GeometryGroup = new GeometryGroup();\r\n\tcr(): void {\r\n\t\tsuper.cr();\r\n\t\tthis.di.d.clear();\r\n\t}\r\n\tcq(): void {\r\n\t\tsuper.cq();\r\n\t\tthis.aq();\r\n\t}\r\n\tda(a: Rect): void {\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate c9: DomWrapper = null;\r\n\tprivate c8: RenderingContext = null;\r\n\tdd(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.c9 == null) {\r\n\t\t\tthis.c9 = this.e.hb.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.hb.get2DCanvasContext(this.c9);\r\n\t\t\tthis.c8 = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.c8);\r\n\t\t\tb.bf(this.bu);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dc));\r\n\t\t}\r\n\t}\r\n\tprivate dc(a: any, b: EventArgs): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tde(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdg(): void {\r\n\t\tif (this.c9 != null) {\r\n\t\t\tthis.c9.setAttribute(\"width\", this.bu.width.toString());\r\n\t\t\tthis.c9.setAttribute(\"height\", this.bu.height.toString());\r\n\t\t}\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.bf(this.bu);\r\n\t\t}\r\n\t}\r\n\tprotected a6(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a6(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.c9 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.di.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.z();\r\n\t\t\tthis.k.q(this.di);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.g();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bu.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bu.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bu.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bu.height));\r\n\t\tthis.k.n(this.c9.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.y();\r\n\t\t}\r\n\t}\r\n\tdf(): void {\r\n\t\tthis.aq();\r\n\t}\r\n\tdb(): void {\r\n\t}\r\n\tdh(a: Rect): void {\r\n\t\tif (this.c7.sz != null) {\r\n\t\t\tthis.c7.sz.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l3);\r\n\t\te = this.ak(a.l2);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l3;\r\n\t\te = a.l2;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.uh = SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.ce = true;\r\n\t\tthis.tw = a;\r\n\t\tthis.tw.nj = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bh = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.ce = true;\r\n\t\tthis.ty = b;\r\n\t\tthis.ty.nj = new SphericalMercatorVerticalScaler();\r\n\t\tthis.u3();\r\n\t\tthis.va();\r\n\t\tthis.l3();\r\n\t}\r\n\tprivate ul: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.tw.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.ty.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tl3(): void {\r\n\t\tsuper.l3();\r\n\t\tthis.t8.fv(this.gc);\r\n\t}\r\n\ter(): boolean {\r\n\t\treturn this.ue;\r\n\t}\r\n\tes(): boolean {\r\n\t\treturn this.ue;\r\n\t}\r\n\tue: boolean;\r\n\tstatic t6: MapResizeBehavior = 0;\r\n\tt7: MapResizeBehavior;\r\n\tua: boolean = false;\r\n\tub: boolean;\r\n\tprotected t5(): MapBackgroundTilingMode {\r\n\t\tif (this.t3 == 0) {\r\n\t\t\tif (this.ua) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate t2: MapBackgroundTilingMode = 1;\r\n\tget t4(): MapBackgroundTilingMode {\r\n\t\treturn this.t2;\r\n\t}\r\n\tset t4(a: MapBackgroundTilingMode) {\r\n\t\tthis.t2 = a;\r\n\t}\r\n\tt3: MapBackgroundTilingMode;\r\n\tstatic vt: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tuh: number = 0;\r\n\tud: boolean;\r\n\tuc: boolean;\r\n\tv9: Rect;\r\n\tprivate vs: Rect = null;\r\n\tget vx(): Rect {\r\n\t\treturn this.vs;\r\n\t}\r\n\tset vx(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.vs, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.vs;\r\n\t\t\tthis.vs = a;\r\n\t\t\tthis.n8(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tv1(): Rect {\r\n\t\treturn this.vx;\r\n\t}\r\n\tprivate u3(): void {\r\n\t\tif (this.v9.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.vx = this.v7(this.v9, this.cd == 1);\r\n\t}\r\n\tprivate v7(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.vt.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.vt.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.uh) {\r\n\t\t\tlet m = i / this.uh;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.vt.width;\r\n\t\t\te = m * XamGeographicMap.vt.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.vt.left) {\r\n\t\t\t\t\td += (XamGeographicMap.vt.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.vt.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.vt.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.uh) {\r\n\t\t\tlet o = this.uh * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.uh)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.uh));\r\n\t\t\t\t\tr -= ((r) - (k + this.uh));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.tz;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.tz = a;\r\n\t\t\tthis.n8(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tz: GeographicMapImagery = null;\r\n\tget tw(): NumericXAxis {\r\n\t\treturn this.tv;\r\n\t}\r\n\tset tw(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.tw;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.tw;\r\n\t\t\tthis.tv = a;\r\n\t\t\tthis.n8(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tv: NumericXAxis = null;\r\n\tget ty(): NumericYAxis {\r\n\t\treturn this.tx;\r\n\t}\r\n\tset ty(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.ty;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ty;\r\n\t\t\tthis.tx = a;\r\n\t\t\tthis.n8(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate tx: NumericYAxis = null;\r\n\tt1: GeographicMapImagery = null;\r\n\tprivate static vw: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tvd(a: Rect): void {\r\n\t\tthis.tp = a;\r\n\t}\r\n\tvc(a: Rect): void {\r\n\t\tthis.v9 = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.vz(a, true, 0);\r\n\t}\r\n\tvy(a: Rect, b: number): Rect {\r\n\t\treturn this.vz(a, false, b);\r\n\t}\r\n\tprivate vz(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.v7(a, false);\r\n\t\t}\r\n\t\tlet e = this.tw;\r\n\t\tlet f = this.ty;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, e.cg);\r\n\t\tg.c = this.td;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, f.cg);\r\n\t\th.c = this.td;\r\n\t\tlet i = this.tw.ei(d.left, g);\r\n\t\tlet j = this.tw.ei(d.right, g);\r\n\t\tlet k = this.ty.ei(d.top, h);\r\n\t\tlet l = this.ty.ei(d.bottom, h);\r\n\t\tlet m = (i - c) / this.to.width;\r\n\t\tlet n = (l - c) / this.to.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.to.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.to.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.vw);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.vw;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.vw;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tv3(a: Rect): Rect {\r\n\t\tlet b = this.tw;\r\n\t\tlet c = this.ty;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.to, b.cg);\r\n\t\td.c = this.td;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.to, c.cg);\r\n\t\te.c = this.td;\r\n\t\tlet f = this.tc;\r\n\t\tlet g = b.el(f.left, d);\r\n\t\tlet h = c.el(f.top, e);\r\n\t\tlet i = b.el(f.right, d);\r\n\t\tlet j = c.el(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cd == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.vt);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.vt;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tvp(a: Point): Point {\r\n\t\tlet b = this.tw.l6(a.x);\r\n\t\tlet c = this.ty.l6(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvq(a: Point): Point {\r\n\t\tlet b = this.tw.e3(a.x);\r\n\t\tlet c = this.ty.e3(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tvr(a: Point): Point {\r\n\t\treturn this.vq(a);\r\n\t}\r\n\tu0(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tu6(a: Brush): void {\r\n\t}\r\n\tfg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tu8(): void {\r\n\t\tthis.t8.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.mv();\r\n\t\t}\r\n\t}\r\n\tprotected vo: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected vb(): void {\r\n\t\tif (this.t7 == 2) {\r\n\t\t\tif (!this.to.isEmpty && this.to.width > 0 && this.to.height > 0) {\r\n\t\t\t\tlet a: number = this.tw.l6(this.to.left + (this.to.width / 2));\r\n\t\t\t\tlet b: number = this.ty.l6(this.to.top + (this.to.height / 2));\r\n\t\t\t\tthis.vo = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.to.isEmpty && this.to.width > 0 && this.to.height > 0) {\r\n\t\t\t\tlet c: number = this.tw.l6(this.to.left);\r\n\t\t\t\tlet d: number = this.ty.l6(this.to.top);\r\n\t\t\t\tthis.vo = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected u7(): void {\r\n\t\tif (isNaN_(this.vo.x) || isNaN_(this.vo.y)) {\r\n\t\t\tthis.vb();\r\n\t\t}\r\n\t\tlet a: number = this.vo.x;\r\n\t\tlet b: number = this.vo.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.s9.left;\r\n\t\t\tlet d: number = this.s9.top;\r\n\t\t\tlet e: number = this.s9.width;\r\n\t\t\tlet f: number = this.s9.height;\r\n\t\t\tif (e > this.vv.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.tw.cg);\r\n\t\t\t\tg.c = this.td;\r\n\t\t\t\tlet h: number = this.tw.ei(a, g);\r\n\t\t\t\tif (this.t7 == 2) {\r\n\t\t\t\t\tlet i = h / this.to.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.to.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.vv.right) {\r\n\t\t\t\t\tc = this.vv.right - e;\r\n\t\t\t\t} else if (c < this.vv.left) {\r\n\t\t\t\t\tc = this.vv.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.vv.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.ty.cg);\r\n\t\t\t\tj.c = this.td;\r\n\t\t\t\tlet k: number = this.ty.ei(b, j);\r\n\t\t\t\tif (this.t7 == 2) {\r\n\t\t\t\t\tlet l = k / this.to.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.to.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.vv.bottom) {\r\n\t\t\t\t\td = this.vv.bottom - f;\r\n\t\t\t\t} else if (d < this.vv.top) {\r\n\t\t\t\t\td = this.vv.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.ph(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected vv: Rect = null;\r\n\tprotected ta(): Rect {\r\n\t\tlet a: Rect = super.ta();\r\n\t\tif (this.tw == null || this.ty == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.tk();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cd == 1) {\r\n\t\t\tif (this.tp.width > this.vv.width) {\r\n\t\t\t\tb = 0.5 - (this.tp.width / 2);\r\n\t\t\t} else if (b + a.width > this.vv.right) {\r\n\t\t\t\tb = this.vv.right - this.tp.width;\r\n\t\t\t} else if (b < this.vv.left) {\r\n\t\t\t\tb = this.vv.left;\r\n\t\t\t}\r\n\t\t\tif (this.tp.height > this.vv.height) {\r\n\t\t\t\tc = 0.5 - (this.tp.height / 2);\r\n\t\t\t} else if (c + this.tp.height > this.vv.bottom) {\r\n\t\t\t\tc = this.vv.bottom - this.tp.height;\r\n\t\t\t} else if (c < this.vv.top) {\r\n\t\t\t\tc = this.vv.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.ud && this.cd == 2 && this.ua) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.vv.right) > 0 && ((a.right - this.vv.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vv.left - (a.width - (a.right - this.vv.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.vv.left && (Math.abs(a.left - this.vv.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.vv.right - (Math.abs(a.left - this.vv.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.ud) {\r\n\t\t\tlet f = this.vy(this.v9, 1);\r\n\t\t\tf = this.v0(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.d6 = true;\r\n\t\t\tthis.tp = e;\r\n\t\t\tthis.d6 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tlh(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.tk();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.tv.ei(-180, b);\r\n\t\t\t\tlet j = this.tv.ei(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.tv.ei(-180, b);\r\n\t\t\t\tlet l = this.tv.ei(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\ttk(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.tw.cg);\r\n\t\ta.c = this.td;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.vw, this.to, this.ty.cg);\r\n\t\tb.c = this.td;\r\n\t\tlet c: number = this.tw.ei(XamGeographicMap.vt.left, a);\r\n\t\tlet d: number = this.tw.ei(XamGeographicMap.vt.right, a);\r\n\t\tlet e: number = this.ty.ei(XamGeographicMap.vt.top, b);\r\n\t\tlet f: number = this.ty.ei(XamGeographicMap.vt.bottom, b);\r\n\t\tthis.vv = new Rect(0, c / this.to.width, f / this.to.height, (d - c) / this.to.width, (e - f) / this.to.height);\r\n\t\treturn this.vv;\r\n\t}\r\n\tprivate v0(a: Rect): Rect {\r\n\t\tlet b: number = this.gg;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.to;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected tb(a: Rect): Rect {\r\n\t\tsuper.tb(this.to);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tv2(a: Rect): Rect {\r\n\t\treturn this.tb(a);\r\n\t}\r\n\tprotected ct(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate u2(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = this;\r\n\t\t}\r\n\t}\r\n\tprotected ns(a: SeriesViewerView): void {\r\n\t\tsuper.ns(a);\r\n\t\tthis.t8 = <XamGeographicMapView>a;\r\n\t}\r\n\tn3(a: Rect, b: Rect): void {\r\n\t\tsuper.n3(a, b);\r\n\t\tthis.o4(this.tw);\r\n\t\tthis.o4(this.ty);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.u7();\r\n\t\t}\r\n\t\tif (this.ud) {\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t}\r\n\t\tthis.ve();\r\n\t}\r\n\tuj: number;\r\n\tprivate ug: number = 1;\r\n\tget ui(): number {\r\n\t\treturn this.ug;\r\n\t}\r\n\tset ui(a: number) {\r\n\t\tlet b = this.ug;\r\n\t\tthis.ug = a;\r\n\t\tthis.n8(\"ActualWindowScale\", b, this.ug);\r\n\t}\r\n\tgm(): number {\r\n\t\treturn this.ui;\r\n\t}\r\n\tgn(): number {\r\n\t\treturn this.ui;\r\n\t}\r\n\tprotected o3(): void {\r\n\t\tsuper.o3();\r\n\t\tlet a = Math.min(this.s9.width, this.s9.height);\r\n\t\tthis.ui = a;\r\n\t}\r\n\te8(): boolean {\r\n\t\treturn this.ua;\r\n\t}\r\n\tce(): ZoomCoercionMode {\r\n\t\tif (this.cf == 0) {\r\n\t\t\tif (this.ub) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cf;\r\n\t}\r\n\tprotected n4(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.n4(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.u3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.vb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.t4 = this.t5();\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.ua = this.ub;\r\n\t\t\tthis.t4 = this.t5();\r\n\t\t\tthis.cd = this.ce();\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tlet e = this.t1;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.u4));\r\n\t\t\t\tthis.t1.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.t1 = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tlet f = this.t1;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.u4));\r\n\t\t\t\tthis.t1.deferralHandler = this;\r\n\t\t\t\tthis.t1.isHorizontalWrappingEnabled = this.t4 == 2;\r\n\t\t\t}\r\n\t\t\tthis.t8.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.t1 != null) {\r\n\t\t\t\tthis.t1.geographicMap = this;\r\n\t\t\t\tthis.t8.fr(this.s9);\r\n\t\t\t\tthis.t8.fv(this.gc);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.u9(<Axis>c);\r\n\t\t\tthis.u2(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.uc) {\r\n\t\t\t\tthis.tp = XamGeographicMap.vw;\r\n\t\t\t}\r\n\t\t\tthis.u3();\r\n\t\t\tthis.va();\r\n\t\t\tthis.vb();\r\n\t\t\tthis.s9 = this.ta();\r\n\t\t\tthis.t8.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.t8.fr(this.s9);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.ml(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.ui = this.uj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.ff) {\r\n\t\t\t\tthis.pf(this.gm(), this.gn());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.t8.fv(this.gc);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.gg = 5E-06;\r\n\t\t\t\tthis.gf = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gg = h;\r\n\t\t\t\tthis.gf = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.pb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.ln();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate u4(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate u9(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bh = null;\r\n\t\t}\r\n\t}\r\n\tprivate va(): void {\r\n\t\tif (this.tw != null) {\r\n\t\t\tthis.tw.l3 = this.vx.left;\r\n\t\t\tthis.tw.l2 = this.vx.right;\r\n\t\t}\r\n\t\tif (this.ty != null) {\r\n\t\t\tthis.ty.l3 = this.vx.top;\r\n\t\t\tthis.ty.l2 = this.vx.bottom;\r\n\t\t}\r\n\t\tthis.tw.c1(true);\r\n\t\tthis.ty.c1(true);\r\n\t}\r\n\tt8: XamGeographicMapView;\r\n\tprivate t9: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.t9 = this.t8.fo;\r\n\t\treturn this.t9;\r\n\t}\r\n\tse(): Brush {\r\n\t\treturn this.t8.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.t8.fx;\r\n\t}\r\n\tprotected ow(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.qj = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.ow(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.om(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.o2(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.lr();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.ul != null) {\r\n\t\t\tthis.ul.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tu1(a: boolean): void {\r\n\t\tthis.pa(a);\r\n\t}\r\n\tum(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.tw.fv();\r\n\t\tlet c = this.ty.fv();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].hu();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.to);\r\n\t\ta.centralArea = RectData.b(this.to);\r\n\t\ta.plotArea = RectData.b(this.to);\r\n\t\treturn a;\r\n\t}\r\n\ttg(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tu5(): void {\r\n\t}\r\n\tprivate vu: Rect = Rect.empty;\r\n\tprotected get v8(): Rect {\r\n\t\treturn this.vu;\r\n\t}\r\n\tprotected set v8(a: Rect) {\r\n\t\tthis.vu = a;\r\n\t}\r\n\tvf(a: Rect): void {\r\n\t\tthis.v8 = a;\r\n\t\tthis.ve();\r\n\t}\r\n\tprivate ve(): void {\r\n\t\tif (this.uf && !this.v8.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.v8);\r\n\t\t\tthis.v8 = Rect.empty;\r\n\t\t\tthis.ph(a, false);\r\n\t\t}\r\n\t}\r\n\tget uf(): boolean {\r\n\t\treturn !this.to.isEmpty && !this.td.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'n8', [ 'BackgroundTilingMode:t3:vg', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:ub:vh', [ 0, false ], 'ResizeBehavior:t7:vi', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.t6) ], 'SuppressZoomResetOnWorldRectChange:uc:vj', [ 0, false ], 'UseWorldRectForZoomBounds:ud:vk', [ 0, false ], 'WindowScale:uj:vl', [ 1, NaN ], 'WorldRect:v9:vm', [ (<any>Rect).$, XamGeographicMap.vt ], 'Zoomable:ue:vn', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.v2(b);\r\n\t\tlet d: Rect = XamGeographicMap.vt;\r\n\t\tlet e: Rect = this.geographicMap.vx;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.tw;\r\n\t\tlet i: NumericYAxis = this.geographicMap.ty;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.cg);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.cg);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ei(d.left, j);\r\n\t\tlet m: number = i.ei(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprotected ce: GeographicXYTriangulatingSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qa;\r\n\t\ta.ra = this.ce.qm;\r\n\t\ta.ri = this.ce.qk;\r\n\t\ta.trianglesSource = this.ce.qj;\r\n\t\ta.qy = this.ce.qp;\r\n\t\ta.q0 = this.ce.qr;\r\n\t\ta.q2 = this.ce.qt;\r\n\t}\r\n\tch(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.p8 = null;\r\n\t\t\ta.p9 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.p8 = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.p9 = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).ra = this.ce.qm;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).ri = this.ce.qk;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).trianglesSource = this.ce.qj;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).qy = this.ce.qp;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).q0 = this.ce.qr;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ce.qa).q2 = this.ce.qt;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicScatterAreaSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.sh = this.cm.q8;\r\n\t\t\tthis.cm.q4.r5 = this.cm.q3;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.sh = this.cm.q8;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q4 != null) {\r\n\t\t\tthis.cm.q4.r5 = this.cm.q3;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.r9 = 2;\r\n\t\tthis.fn.hl = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bv(a);\r\n\t\tthis.fn.u1(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a7(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.t1 != null) {\r\n\t\t\tthis.fn.t1.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.t1 != null) {\r\n\t\t\tthis.fn.t1.windowRect = this.fn.s9;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.e.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.e.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.gc;\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t\ta.aa(b, b);\r\n\t\t}\r\n\t\ta.k(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.y();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ac = Defaults.j;\r\n\t\tthis.fe.ac = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qi = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tqi: GeographicXYTriangulatingSeriesView;\r\n\tqm: string;\r\n\tqk: string;\r\n\tqj: IEnumerable;\r\n\tqp: string;\r\n\tqr: string;\r\n\tqt: string;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qi.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.qi.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.qi.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.qi.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.qi.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.qi.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.qi.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:qk:qv', [ 2, \"pointY\" ], 'LongitudeMemberPath:qm:qw', [ 2, \"pointX\" ], 'TrianglesSource:qj:qx', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:qp:qy', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:qr:qz', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:qt:q0', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_dd(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\tq8: string;\r\n\tprivate q1: ColorScale = null;\r\n\tget q3(): ColorScale {\r\n\t\treturn this.q1;\r\n\t}\r\n\tset q3(a: ColorScale) {\r\n\t\tlet b: boolean = this.q1 != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.q1;\r\n\t\t\tif (this.q1 != null) {\r\n\t\t\t\tlet d = this.q1;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tthis.q1 = a;\r\n\t\t\tif (this.q1 != null) {\r\n\t\t\t\tlet e = this.q1;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.rb));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.q1);\r\n\t\t\tif (this.q4 != null) {\r\n\t\t\t\tthis.q4.r5 = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate rb(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.q6.co();\r\n\t\tthis.rd();\r\n\t\tthis.ml(false);\r\n\t}\r\n\trd(): void {\r\n\t\tif (this.q4 != null) {\r\n\t\t\tthis.q2 = this.q4.r4;\r\n\t\t}\r\n\t}\r\n\tq2: ColorScale;\r\n\tprotected mz(): void {\r\n\t\tsuper.mz();\r\n\t\tthis.rd();\r\n\t}\r\n\tq4: ScatterAreaSeries;\r\n\tprotected p9(): Series {\r\n\t\tthis.q4 = new ScatterAreaSeries();\r\n\t\tlet a = this.q4;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rc));\r\n\t\treturn this.q4;\r\n\t}\r\n\tprivate rc(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.q6 = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tq6: GeographicScatterAreaSeriesView;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.q6.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.q6.co();\r\n\t\t\tthis.rd();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:q2:re', [ (<any>ColorScale).$, null ], 'ColorMemberPath:q8:rf', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cm = a;\r\n\t}\r\n\tprivate cm: GeographicContourLineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cm.g1 = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tif (this.cm.qa != null) {\r\n\t\t\tthis.cm.q2.r5 = this.cm.q5;\r\n\t\t\tthis.cm.q2.sf = this.cm.q9;\r\n\t\t}\r\n\t}\r\n\tcn(): void {\r\n\t\tif (this.cm.q2 != null) {\r\n\t\t\tthis.cm.q2.r5 = this.cm.q5;\r\n\t\t}\r\n\t}\r\n\tco(): void {\r\n\t\tif (this.cm.q2 != null) {\r\n\t\t\tthis.cm.q2.sf = this.cm.q9;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_d1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t}\r\n\tq2: ScatterContourSeries;\r\n\tprotected p9(): Series {\r\n\t\tthis.q2 = new ScatterContourSeries();\r\n\t\tlet a = this.q2;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.rc));\r\n\t\tlet b = this.q2;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.rd));\r\n\t\treturn this.q2;\r\n\t}\r\n\tprivate rc(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate rd(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.q4 = c.r4;\r\n\t\t}\r\n\t}\r\n\tq9: string;\r\n\tq5: ValueBrushScale;\r\n\tq4: ValueBrushScale;\r\n\tprotected mz(): void {\r\n\t\tsuper.mz();\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.q6 = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tq6: GeographicContourLineSeriesView;\r\n\tq1: ContourValueResolver;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.q6.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.q6.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.q2.r2 = this.q1;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.q2.pg = this.pg;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.q2.ph = this.ph;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.q2.gt = this.gt;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:q4:re', [ (<any>ValueBrushScale).$, null ], 'FillScale:q5:rf', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:q9:rg', [ 2, \"value\" ], 'ValueResolver:q1:rh', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.d1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.q9 as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.q9 = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        if (this.i.q5 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q5 as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(this.i.q5);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q5;\r\n\t                                            }\r\n\t                                            (this.i.q5 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q5 as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q5 = null : this.i.q5 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        if (this.i.q4 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q4 as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(this.i.q4);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q4;\r\n\t                                            }\r\n\t                                            (this.i.q4 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q4 as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q4 = null : this.i.q4 = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        if (this.i.q1 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q1 as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(this.i.q1);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q1;\r\n\t                                            }\r\n\t                                            (this.i.q1 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q1 as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q1 = null : this.i.q1 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicHighDensityScatterSeries = null;\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qa);\r\n\t\ta.si = this.ce.qz;\r\n\t\ta.sq = this.ce.qx;\r\n\t\ta.qv = this.ce.qm;\r\n\t\ta.qu = this.ce.ql;\r\n\t\ta.em = this.ce.qk;\r\n\t\ta.rq = this.ce.qo;\r\n\t\ta.rp = this.ce.qn;\r\n\t\ta.to = this.ce.ri;\r\n\t\ta.tn = this.ce.rh;\r\n\t\ta.r2 = this.ce.qr;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).si = this.ce.qz;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).sq = this.ce.qx;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qv = this.ce.qm;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qu = this.ce.ql;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).em = this.ce.qk;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).rq = this.ce.qo;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).rp = this.ce.qn;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ce.qa);\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.qf = null;\r\n\t\t\ta.qh = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.qf = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.qh = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qf = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).qh = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tch(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).to = this.ce.ri;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).tn = this.ce.rh;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ce.qa).r2 = this.ce.qr;\r\n\t}\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ce.ri = Defaults.aq;\r\n\t\t\tthis.ce.rh = Defaults.ap;\r\n\t\t\tthis.ce.o7 = Defaults.al;\r\n\t\t\tthis.ce.pc = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected gw(): number {\r\n\t\tif (!isNaN_(this.gv)) {\r\n\t\t\treturn super.gw();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_d6(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.qj = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tqj: GeographicHighDensityScatterSeriesView;\r\n\tprotected p9(): Series {\r\n\t\tthis.qi = new HighDensityScatterSeries();\r\n\t\treturn this.qi;\r\n\t}\r\n\tprivate qi: HighDensityScatterSeries = null;\r\n\tqx: string;\r\n\tqz: string;\r\n\tqm: boolean;\r\n\tql: boolean;\r\n\tqk: boolean;\r\n\tqo: number;\r\n\tqn: number;\r\n\tri: Color;\r\n\trh: Color;\r\n\tqr: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate qq: number = 0;\r\n\tget qs(): number {\r\n\t\treturn this.qq;\r\n\t}\r\n\tset qs(a: number) {\r\n\t\tlet b = this.qq;\r\n\t\tthis.qq = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.qq);\r\n\t}\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t\tlet a = (<HighDensityScatterSeries>this.qa);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.q6));\r\n\t\tlet b = (<HighDensityScatterSeries>this.qa);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.q5));\r\n\t}\r\n\tprivate q6(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.qs = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate q5(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.qi == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.qj.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.qj.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.qj.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.qj.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.qj.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.qj.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.qj.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.qj.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.qj.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.qj.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.qj.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.qj.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.qj.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_e5(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_e5(a: boolean): void {\r\n\t\tsuper.set_e5(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:rh:q7', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:qn:q8', [ 1, 50 ], 'HeatMinimumColor:ri:q9', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:qo:ra', [ 1, 0 ], 'LatitudeMemberPath:qx:rb', [ 2, null ], 'LongitudeMemberPath:qz:rc', [ 2, null ], 'MouseOverEnabled:qk:rd', [ 0, false ], 'PointExtent:qr:re', [ 1, 1 ], 'ProgressiveLoad:ql:rf', [ 0, true ], 'UseBruteForce:qm:rg', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.d6 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qx as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qx = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qz as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qz = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.qm as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.qm = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.qm);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.ql as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.ql = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.ql);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.qk as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.qk = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.qk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.qo as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.qo = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.qo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.qn as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.qn = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.qn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.ri);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.ri = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.rh);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.rh = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.rh));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.qr as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.qr = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.qs as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.qs = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.qs);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.ue as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.ue = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.ue);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.t7;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.t7 = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.t7));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.ub as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.ub = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.ub);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.t3;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.t3 = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.t3));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.ud as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.ud = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.ud);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.uc as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.uc = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.uc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.v9);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.v9 = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.v9));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.vx);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.vx = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.vx));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        if (this.i.tw == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.tw as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(this.i.tw);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.tw;\r\n\t                                            }\r\n\t                                            (this.i.tw as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.tw as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.tw = null : this.i.tw = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        if (this.i.ty == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.ty as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(this.i.ty);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.ty;\r\n\t                                            }\r\n\t                                            (this.i.ty as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.ty as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ty = null : this.i.ty = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.uj as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.uj = +v;\r\n\t                                        this._a(\"windowScale\", this.i.uj);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.ui as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.ui = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.ui);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.uf as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t\tlet iv = this.i.v1();\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.vd(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.vc(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t\tlet iv = this.i.vy(toRect(geographic), extraPixelPadding);\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t\tlet iv = this.i.v3(toRect(windowRect));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.vp(toPoint(pixelCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.vq(toPoint(geographicCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t\tlet iv = this.i.vr(toPoint(geographicCoordinate));\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.u0();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.u8();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t\tlet iv = this.i.gm();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t\tlet iv = this.i.gn();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t\tlet iv = this.i.um();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.vf(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        if (this.i.geographicMap == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.geographicMap as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.dw as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.qc as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.qc = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.qc);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.ln();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t\tlet iv = this.i.hy(item, memberPathName);\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t\tlet iv = this.i.hv(toPoint(world));\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.hl(toPoint(world), skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.hj(toPoint(world), skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.gl(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.pq(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.pz(toPoint(world));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t\tlet iv = this.i.p1(toPoint(world));\r\n\t\treturn fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.gh(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.po(toPoint(world), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t\tlet iv = this.i.pr(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t\treturn fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t\tlet iv = this.i.gm(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t\tlet iv = this.i.gc();\r\n\t\treturn (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.ml(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.mv();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.qk;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.qk = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.qk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.ql as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.ql = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.ql);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.qj;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.qj = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.qj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.qi;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.qi = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.qi));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.q0 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.q0 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.re);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.re = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.re));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.rf);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.rf = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.rf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.qm as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.qm = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.qm);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.qz as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.qz = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.rc);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.rc = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.rc));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.rd);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.rd = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.rd));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t}\r\n\tprotected ci: GeographicPolylineSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.g1 = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).sw = this.ci.rg;\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).s1 = this.ci.ro;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolylineSeries>this.ci.qa).s1 = this.ci.ro;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d9(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rh = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\trh: GeographicPolylineSeriesView;\r\n\trg: StyleSelector;\r\n\tro: Style;\r\n\tprotected p9(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.rl));\r\n\t\treturn a;\r\n\t}\r\n\tprivate rl(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.rh.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.rh.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:ro:rm', [ (<any>Style).$, null ], 'ShapeStyleSelector:rg:rn', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.d9 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.ro ? (this.i.ro.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ro.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.ro ? (this.i.ro.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ro.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.ro ? (this.i.ro.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ro.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.ro.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.ro ? (this.i.ro.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ro.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.ro.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.ro) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.ro = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicProportionalSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\tlet a = <BubbleSeries>this.ce.qa;\r\n\t\ta.ti = this.ce.r9;\r\n\t\ta.tq = this.ce.r7;\r\n\t\ta.qh = this.ce.qk;\r\n\t\ta.q3 = this.ce.q0;\r\n\t\ta.qm = this.ce.ql;\r\n\t\ta.vl = this.ce.rt;\r\n\t\ta.wb = this.ce.se;\r\n\t\ta.vb = this.ce.rl;\r\n\t\ta.v1 = this.ce.r5;\r\n\t\ta.vw = this.ce.rx;\r\n\t\ta.u8 = this.ce.ri;\r\n\t\ta.vj = this.ce.rp;\r\n\t\ta.vk = this.ce.rs;\r\n\t\ta.vq = this.ce.rv;\r\n\t\ta.vp = this.ce.ru;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).ti = this.ce.r9;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).tq = this.ce.r7;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).qh = this.ce.qk;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).q3 = this.ce.q0;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).qm = this.ce.ql;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).s2 = this.ce.qm;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tcu(): void {\r\n\t\tlet a = <BubbleSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).rj = this.ce.re;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).rk = this.ce.rf;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).wb = this.ce.se;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vb = this.ce.rl;\r\n\t\t(<BubbleSeries>this.ce.qa).vl = this.ce.rt;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).v1 = this.ce.r5;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).u8 = this.ce.ri;\r\n\t\t(<BubbleSeries>this.ce.qa).vj = this.ce.rp;\r\n\t\t(<BubbleSeries>this.ce.qa).vk = this.ce.rs;\r\n\t\t(<BubbleSeries>this.ce.qa).vq = this.ce.rv;\r\n\t\t(<BubbleSeries>this.ce.qa).vp = this.ce.ru;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vw = this.ce.rx;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vl = this.ce.rt;\r\n\t}\r\n\tch(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vj = this.ce.rp;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vk = this.ce.rs;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vq = this.ce.rv;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ce.qa).vp = this.ce.ru;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rm = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\trm: GeographicProportionalSymbolSeriesView;\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate rj: BubbleSeries = null;\r\n\tr7: string;\r\n\tr9: string;\r\n\tse: string;\r\n\trl: SizeScale;\r\n\tr5: string;\r\n\trx: string;\r\n\tri: BrushScale;\r\n\trp: boolean;\r\n\trs: boolean;\r\n\trv: number;\r\n\tru: number;\r\n\trt: boolean;\r\n\trr: boolean;\r\n\trq: boolean;\r\n\tprotected ro: boolean = false;\r\n\tprotected rn: boolean = false;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trk: ScatterItemSearchMode;\r\n\trw: number;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rm.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.rm.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.rm.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rm.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rm.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.rm.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.rm.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.rm.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.rm.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.rm.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.rm.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.rm.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.rm.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.rm.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.rm.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.qa).so = this.rr;\r\n\t\t\tthis.ro = this.rr;\r\n\t\t\tif (this.rr) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qa);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.sj));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qa);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.sj));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).sn = this.rq;\r\n\t\t\tthis.rn = this.rq;\r\n\t\t\tif (this.rr) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qa);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.si));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qa);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.si));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.qa).sd = this.rk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.qa).s1 = this.rw;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate sj(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate si(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:rx:sk', [ 2 ], 'FillScale:ri:sl', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:rp:sm', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:rq:sn', [ 0, false ], 'IsCustomScatterStyleAllowed:rr:so', [ 0, false ], 'ItemSearchMode:rk:sp', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rw:sq', [ 1, 10000 ], 'LabelMemberPath:r5:sr', [ 2 ], 'LatitudeMemberPath:r7:ss', [ 2, null ], 'LongitudeMemberPath:r9:st', [ 2, null ], 'MarkerBrushBrightness:ru:su', [ 1, NaN ], 'MarkerOutlineBrightness:rv:sv', [ 1, NaN ], 'MarkerOutlineUsesFillScale:rs:sw', [ 0, false ], 'RadiusMemberPath:se:sx', [ 2, null ], 'RadiusScale:rl:sy', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:rt:sz', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.r7 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.r7 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.r9 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.r9 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.se as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.se = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        if (this.i.rl == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.rl as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(this.i.rl);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.rl;\r\n\t                                            }\r\n\t                                            (this.i.rl as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.rl as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.rl = null : this.i.rl = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.r5 as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.r5 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.rx as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.rx = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        if (this.i.ri == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.ri as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(this.i.ri);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.ri;\r\n\t                                            }\r\n\t                                            (this.i.ri as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.ri as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ri = null : this.i.ri = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rp as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rp = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.rp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.rs as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.rs = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.rs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.rv as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.rv = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.rv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.ru as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.ru = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.ru);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.rt as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.rt = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.rt);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rr as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rr = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.rq as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.rq = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.rq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rk;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rk = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rw as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rw = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rw);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.dd as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.q8 as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.q8 = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        if (this.i.q3 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q3 as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(this.i.q3);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q3;\r\n\t                                            }\r\n\t                                            (this.i.q3 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q3 as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q3 = null : this.i.q3 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        if (this.i.q2 == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.q2 as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(this.i.q2);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = this.i.q2;\r\n\t                                            }\r\n\t                                            (this.i.q2 as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.q2 as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.q2 = null : this.i.q2 = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.rd();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.q3 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.q3 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.qs as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.qs = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.qs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.qr as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.qr = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.qr);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.qk;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.qk = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.qk));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.qv as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.qv = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.qv);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.qu as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.qu = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.qu);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        if (this.i.qn == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(this.i.qn as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            (e as any)._implementation = this.i.qn;\r\n\t                                            (this.i.qn as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (this.i.qn as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.qn = null : this.i.qn = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.qt as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.qt = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.qt);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ci = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.q3 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected ci: GeographicShapeSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ci.sn = Defaults.aj;\r\n\t\t\tthis.ci.g1 = Defaults.p;\r\n\t\t\tthis.ci.rm = Defaults.o;\r\n\t\t\tthis.ci.rj = Defaults.d;\r\n\t\t\tthis.ci.rh = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tsuper.b2();\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).uh = this.ci.sp;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ta = this.ci.rk;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).tw = this.ci.r5;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).td = this.ci.rm;\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).tw = this.ci.r5;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).td = this.ci.rm;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).sw = this.ci.rg;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).s5 = this.ci.rj;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ud = this.ci.sm;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ue = this.ci.sn;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ug = this.ci.so;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).ta = this.ci.rk;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.ci.qa).uh = this.ci.sp;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_d8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\trl: GeographicShapeSeriesView;\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rl = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.r2));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.r3));\r\n\t\treturn a;\r\n\t}\r\n\tprivate r2(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate r3(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qa);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\trk: StyleSelector;\r\n\tsp: Style;\r\n\trj: MarkerType;\r\n\tri: MarkerOutlineMode;\r\n\trh: MarkerFillMode;\r\n\tr5: DataTemplate;\r\n\tsm: Brush;\r\n\tsn: Brush;\r\n\tso: Style;\r\n\trm: number;\r\n\tf4(): number {\r\n\t\treturn this.rm;\r\n\t}\r\n\tpa(): Brush {\r\n\t\treturn this.sk;\r\n\t}\r\n\tpb(): Brush {\r\n\t\treturn this.sl;\r\n\t}\r\n\tnh(): DataTemplate {\r\n\t\treturn this.r4;\r\n\t}\r\n\ti0(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.qa);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.i0();\r\n\t}\r\n\trg: CollisionAvoidanceType;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.qa).s3 = this.ri;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.qa).sz = this.rh;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.rl.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.rl.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.rl.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.rl.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.rl.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.rl.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.rl.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.rl.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.rl.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tr4: DataTemplate;\r\n\tsk: Brush;\r\n\tsl: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:sk:r6', [ (<any>Brush).$ ], 'ActualMarkerOutline:sl:r7', [ (<any>Brush).$ ], 'ActualMarkerTemplate:r4:r8', [ (<any>DataTemplate).$, null ], 'MarkerBrush:sm:r9', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:rg:sa', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:rh:sb', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:ri:sc', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:sn:sd', [ (<any>Brush).$ ], 'MarkerStyle:so:se', [ (<any>Style).$ ], 'MarkerTemplate:r5:sf', [ (<any>DataTemplate).$, null ], 'MarkerThickness:rm:sg', [ 1, DeviceUtils.g(2) ], 'MarkerType:rj:sh', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:sp:si', [ (<any>Style).$, null ], 'ShapeStyleSelector:rk:sj', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.d8 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.sp ? (this.i.sp.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.sp.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.sp ? (this.i.sp.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.sp.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.sp ? (this.i.sp.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.sp.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.sp.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.sp ? (this.i.sp.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.sp.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.sp.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.sp) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.sp = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.rj;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.rj = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.ri;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.ri = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.rh;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.rh = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.rh));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r5 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r5 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.sm);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.sm = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.sm));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.sn);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.sn = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.sn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.rm as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.rm = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.rm);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.rg;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.rg = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.rg));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.r4 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.r4 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.sk);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.sk = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.sk));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.sl);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.sl = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.sl));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ce = a;\r\n\t}\r\n\tprivate ce: GeographicSymbolSeries = null;\r\n\tas(): void {\r\n\t\tsuper.as();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb2(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qa;\r\n\t\tsuper.b2();\r\n\t\ta.ti = this.ce.ry;\r\n\t\ta.tq = this.ce.rw;\r\n\t\ta.qh = this.ce.qk;\r\n\t\ta.q3 = this.ce.q0;\r\n\t\ta.qm = this.ce.ql;\r\n\t}\r\n\tcg(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).ti = this.ce.ry;\r\n\t}\r\n\tcf(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).tq = this.ce.rw;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).qh = this.ce.qk;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).q3 = this.ce.q0;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).qm = this.ce.ql;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).s2 = this.ce.qm;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tco(): void {\r\n\t\tlet a = <ScatterSeries>this.ce.qa;\r\n\t\tif (this.ce.cd == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ce.cd).tw;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ce.cd).ty;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rt = this.ce.ri;\r\n\t}\r\n\tch(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rj = this.ce.re;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ce.qa).rk = this.ce.rf;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_c4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected bx(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tl2(a: SeriesView): void {\r\n\t\tsuper.l2(a);\r\n\t\tthis.rl = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\trl: GeographicSymbolSeriesView;\r\n\tprotected gx(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate rk: ScatterSeries = null;\r\n\trw: string;\r\n\try: string;\r\n\tri: CollisionAvoidanceType;\r\n\trp: boolean;\r\n\tro: boolean;\r\n\tprotected rn: boolean = false;\r\n\tprotected rm: boolean = false;\r\n\tprotected get_dy(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\trj: ScatterItemSearchMode;\r\n\trr: number;\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.rl.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.rl.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.rl.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.rl.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.rl.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.rl.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.qa).so = this.rp;\r\n\t\t\tthis.rn = this.rp;\r\n\t\t\tif (this.rp) {\r\n\t\t\t\tlet e = (<ScatterBase>this.qa);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.r3));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.qa);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.r3));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.qa).sn = this.ro;\r\n\t\t\tthis.rm = this.ro;\r\n\t\t\tif (this.rp) {\r\n\t\t\t\tlet g = (<ScatterBase>this.qa);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.r2));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.qa);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.r2));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.qa).sd = this.rj;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.qa).s1 = this.rr;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate r3(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate r2(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\trq: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:ro:r4', [ 0, false ], 'IsCustomScatterStyleAllowed:rp:r5', [ 0, false ], 'ItemSearchMode:rj:r6', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:rr:r7', [ 1, 10000 ], 'LatitudeMemberPath:rw:r8', [ 2, null ], 'LongitudeMemberPath:ry:r9', [ 2, null ], 'MarkerCollisionAvoidance:ri:sa', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:rq:sb', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.c4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.rw as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.rw = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.ry as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.ry = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.ri;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.ri = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.ri));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.rp as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.rp = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.rp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.ro as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.ro = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.ro);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.rj;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.rj = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.rj));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.rr as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.rr = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.rr);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_ej(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget ri(): GeographicMapImagery {\r\n\t\treturn this.rh;\r\n\t}\r\n\tset ri(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.ri;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ri;\r\n\t\t\tthis.rh = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate rh: GeographicMapImagery = null;\r\n\trm(): void {\r\n\t\tif (this.ri != null) {\r\n\t\t\tthis.ri.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected l7(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.l7(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.qa != null) {\r\n\t\t\t\t(<TileSeries>this.qa).sz = this.ri;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate rg: TileSeries = null;\r\n\tprotected qf(): void {\r\n\t\tsuper.qf();\r\n\t\t(<TileSeries>this.qa).sz = this.ri;\r\n\t\tif (this.rg != null) {\r\n\t\t\tlet a = this.rg;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.rl));\r\n\t\t}\r\n\t\tthis.rg = <TileSeries>this.qa;\r\n\t\tif (this.rg != null) {\r\n\t\t\tlet b = this.rg;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.rl));\r\n\t\t}\r\n\t}\r\n\tprotected p9(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate rl(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        if (this.i.ri == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.ri as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.ri = null : this.i.ri = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.rm();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.qm as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.qm = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.qk as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.qk = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.qj as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.qj = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.qp as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.qp = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.qr as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.qr = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.qt as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.qt = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t\r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }                  \r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.ej as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        if (this.i.sz == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (this.i.sz as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.sz = null : this.i.sz = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","constructor","super","p8","this","qa","p9","ln","get_dw","hy","a","b","c","js","c1","d","ag","be","qf","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","_implementation","k5","qb","b2","aw","ay","ax","az","hv","h0","hl","hj","gl","pq","pz","ak","p0","al","p1","p2","gh","pm","gj","po","pr","gm","pn","gi","pp","gk","hg","gc","f8","hw","bx","HostSeriesView","l2","$","qc","qh","h","l7","cd","op","lk","ma","p3","index","lb","hq","e","S","actualWindowRectChanged","qg","f","qe","b8","b3","ca","b7","hs_","v_","_visibility","visibility","em","expectFunctions","cc","b1","b9","by","bz","gs","b6","f1","b0","cb","title","b4","b5","legend","at","s9","width","v2_","ml","mk","mv","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","la","hu","k2","$t","raisePropertyChanged","oldValue","newValue","ar","p7","itemsSource","o7","pc","bt","gv","ho","_opacity","g1","et","legendItemBadgeShape","a9","o3","o6","GeographicMarkerSeries","propertyUpdated","qy","nh","qz","pa","rc","pb","rd","f4","ql","i0","propertyName","q1","ri","rh","$$p","rj","re","rk","rf","qj","qi","qk","q3","q0","qm","s2","B","GeographicShapeSeriesBase","qq","qp","assigningShapeStyle","assigningShapeMarkerStyle","qo","GeographicShapeSeriesBaseView","get_dy","get_c2","cf","ch","cg","q9","qs","q6","q8","qr","g","q5","qv","rq","qu","rr","i","importCompleted","q7","j","count","ext_","qn","getPointData","get_e5","set_e5","ce","r1","tw","ty","rn","qt","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","sx","sw","imageTilesReady","s0","s1","ab","get_ej","TileSeriesView","sv","get_rb","sz","sy","propertyChanged","s4","de","ls","s5","deferralHandler","dd","type","XamGeographicMap","geographicMap","s7","da","dh","w","lu","df","register","unRegister","deferredRefresh","deferAction","hb","setTimeout","window","m8","dg","mm","s6","getViewInfo","fe","item","a1","cx","sf","ao","isEmpty","height","k0","db","IMapRenderDeferralHandler","ShapeSeriesViewBase","c7","di","GeometryGroup","c9","c8","as","q","Defaults","add","c2","c3","cl","cj","cr","clear","cq","aq","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","bu","toString","bd","imagesChanged","dc","bf","a6","k","z","clip","Math","round","left","top","n","getNativeElement","y","SphericalMercatorVerticalScaler","VerticalLinearScaler","au","ai","aj","Rect","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","aa","m","o","r","s","t","u","ac","ah","sin","log","l3","p4","am","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","ul","ua","t2","uh","vs","tz","tv","tx","t1","vo","$type","NaN","vv","ug","t9","vu","vt","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bh","nj","NumericYAxis","u3","va","provideContainer","provideRenderer","t8","fv","er","ue","es","t5","t3","t4","vx","n8","v1","v9","v7","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","vd","tp","vc","vz","vy","ScalerParams","vw","to","td","ei","intersect","getZoomFromGeographicPoints","v3","tc","el","vp","l6","vq","e3","vr","u0","GeographicMapImagery","clearTileCache","u6","fg","u8","ee","series","vb","t7","u7","ph","ta","tk","ud","floor","ceil","abs","v0","d6","lh","Tuple$2","gg","MathUtil","tb","v2","ct","XamGeographicMapView","u2","ns","n3","o4","ve","ui","gn","min","e8","ub","n4","isHorizontalWrappingEnabled","u4","fu","fr","u9","uc","fs","uj","ff","pf","gf","getFontInfo","fo","se","fw","getFontBrush","fx","ow","ItfConverter","triangulationSource","points","triangles","om","o2","lr","u1","um","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","tg","u5","v8","vf","uf","t6","DependencyProperty","PropertyMetadata","Control","an","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","a5","a4","a3","a2","referer","bj","userAgent","av","bg","ba","geographicMapProperty","a7","bs","bn","cm","bc","a8","XamMultiScaleImage","Size","GeographicXYTriangulatingSeriesView","ra","trianglesSource","q2","ci","ck","GeographicScatterAreaSeriesView","q4","sh","r5","cn","co","SeriesViewerView","fn","fz","fp","r9","bk","bv","get_ap","d4","BrushCollection","du","ae","dv","fy","remove","ft","d1","fd","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","triangulationStatusChanged","get_dd","rb","r4","mz","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bw","isDeferredLoad","cp","string","apiKey","Uri","imageryStyle","url_","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","_subDomains","_actualSubDomains","createImplementation","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","ev","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_d1","ScatterContourSeries","r2","pg","gt","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","htmlTagName","isLineContour","valueMemberPath","fillScale","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","si","sq","qx","rp","tn","GeographicHighDensityScatterSeries","progressiveLoadStatusChanged","gw","get_d6","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcGeographicMapComponent","contentSeries","actualSeries","_series","_dataSource","_seriesAdapter","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","_chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","notifyContainerResized","value","_height","style","_width","undefined","_innerColl","addListener","sender","action","NotifyCollectionChangedAction","addManualItem","newItems","removeManualItemAt","oldStartingIndex","insertManualItem","newStartingIndex","clearManualItems","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","disconnectedCallback","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","ej","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","IgcGeographicMapImagery","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","dw","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","rg","ro","GeographicPolylineSeries","styleShape","get_d9","ScatterPolylineSeries","rl","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","d9","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","ti","tq","r7","vl","rt","wb","rx","vj","vk","rs","rv","ru","cs","cv","cw","cu","cy","cz","GeographicProportionalSymbolSeries","assigningScatterStyle","assigningScatterMarkerStyle","get_c4","rm","gx","BubbleSeries","so","sj","sn","sd","rw","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","c4","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","sp","sm","GeographicShapeSeries","get_d8","ScatterPolygonSeries","r3","sk","sl","s3","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","d8","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","ry","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}