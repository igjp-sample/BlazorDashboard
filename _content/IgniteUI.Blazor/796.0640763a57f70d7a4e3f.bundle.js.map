{"version":3,"file":"796.0640763a57f70d7a4e3f.bundle.js","mappings":"0SAwBO,MAAMA,GAKN,MAAMC,GAGN,MAAMC,UAAuBD,GAsF7B,MAAME,UAAqBF,GA0C3B,MAAMG,UAAwBH,GA2B9B,MAAMI,UAAwBJ,GAmB9B,MAAMK","sources":["webpack://InfragisticsBlazor/./igc-dock-manager-shims.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nexport declare enum IgcDockManagerPaneType {\r\n    splitPane = \"splitPane\",\r\n    contentPane = \"contentPane\",\r\n    tabGroupPane = \"tabGroupPane\",\r\n    documentHost = \"documentHost\"\r\n}\r\nexport declare enum IgcSplitPaneOrientation {\r\n    horizontal = \"horizontal\",\r\n    vertical = \"vertical\"\r\n}\r\nexport declare enum IgcUnpinnedLocation {\r\n    top = \"top\",\r\n    bottom = \"bottom\",\r\n    left = \"left\",\r\n    right = \"right\"\r\n}\r\n\r\nexport class IgcDockManagerPoint {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class IgcDockManagerPane {\r\n\r\n}\r\nexport class IgcContentPane extends IgcDockManagerPane {\r\n    /**\r\n     * The id of the pane. If not set the Dock Manager generates it automatically.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * The type of the pane.\r\n     */\r\n    type: IgcDockManagerPaneType.contentPane;\r\n    /**\r\n     * The slot attribute's value of the content element.\r\n     */\r\n    contentId: string;\r\n    /**\r\n     * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n     */\r\n    header: string;\r\n    /**\r\n     * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n     */\r\n    headerId?: string;\r\n    /**\r\n     * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n     */\r\n    tabHeaderId?: string;\r\n    /**\r\n     * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n     */\r\n    unpinnedHeaderId?: string;\r\n    /**\r\n     * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n     */\r\n    floatingHeaderId?: string;\r\n    /**\r\n     * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n     */\r\n    allowClose?: boolean;\r\n    /**\r\n     * Determines whether the end user is allowed to maximize the pane.\r\n     */\r\n    allowMaximize?: boolean;\r\n    /**\r\n     * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n     */\r\n    allowPinning?: boolean;\r\n    /**\r\n     * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n     */\r\n    allowDocking?: boolean;\r\n    /**\r\n     * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n     */\r\n    allowFloating?: boolean;\r\n    /**\r\n     * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n     */\r\n    unpinnedSize?: number;\r\n    /**\r\n     * Determines whether a content pane is pinned or not. Defaults to true.\r\n     */\r\n    isPinned?: boolean;\r\n    /**\r\n     * The desired unpinned location of the content pane.\r\n     *\r\n     * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n     * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n     * If there is no document host, the default location is left.\r\n     */\r\n    unpinnedLocation?: IgcUnpinnedLocation;\r\n    /**\r\n     * Determines whether a pane is hidden in the UI. Defaults to false.\r\n     */\r\n    hidden?: boolean;\r\n    /**\r\n     * Determines whether a pane is disabled. Defaults to false.\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Marks that a content pane can be docked only inside a document host.\r\n     */\r\n    documentOnly?: boolean;\r\n}\r\nexport class IgcSplitPane extends IgcDockManagerPane {\r\n    /**\r\n     * The id of the pane. If not set the Dock Manager generates it automatically.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * The type of the pane.\r\n     */\r\n    type: IgcDockManagerPaneType.splitPane;\r\n    /**\r\n     * The orientation of the split pane.\r\n     */\r\n    orientation: IgcSplitPaneOrientation;\r\n    /**\r\n     * The child panes of the split pane.\r\n     */\r\n    panes: IgcDockManagerPane[];\r\n    /**\r\n     * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * The absolute location point of the pane. Applies only for floating panes.\r\n     */\r\n    floatingLocation?: IgcDockManagerPoint;\r\n    /**\r\n     * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n     */\r\n    floatingWidth?: number;\r\n    /**\r\n     * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n     */\r\n    floatingHeight?: number;\r\n    /**\r\n     * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n     */\r\n    floatingResizable?: boolean;\r\n    /**\r\n     * Determines whether the pane should present in the UI when empty.\r\n     */\r\n    allowEmpty?: boolean;\r\n}\r\nexport class IgcTabGroupPane extends IgcDockManagerPane {\r\n    /**\r\n     * The id of the pane. If not set the Dock Manager generates it automatically.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * The type of the pane.\r\n     */\r\n    /* alternateName: paneType */\r\n    type: IgcDockManagerPaneType.tabGroupPane;\r\n    /**\r\n     * The child content panes of the tab group.\r\n     */\r\n    panes: IgcContentPane[];\r\n    /**\r\n     * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * The index of the selected tab.\r\n     */\r\n    selectedIndex?: number;\r\n    /**\r\n     * Determines whether the pane should present in the UI when empty.\r\n     */\r\n    allowEmpty?: boolean;\r\n}\r\nexport class IgcDocumentHost extends IgcDockManagerPane {\r\n    /**\r\n     * The id of the pane. If not set the Dock Manager generates it automatically.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * The type of the pane.\r\n     */\r\n    /* alternateName: paneType */\r\n    type: IgcDockManagerPaneType.documentHost;\r\n    /**\r\n     * The root split pane of the document host.\r\n     */\r\n    rootPane: IgcSplitPane;\r\n    /**\r\n     * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n     */\r\n    size?: number;\r\n}\r\nexport class IgcDockManagerLayout {\r\n    /**\r\n     * The root split pane of the layout.\r\n     */\r\n    rootPane: IgcSplitPane;\r\n    /**\r\n     * The floating panes of the layout.\r\n     */\r\n    floatingPanes?: IgcSplitPane[];\r\n}"],"names":["IgcDockManagerPoint","IgcDockManagerPane","IgcContentPane","IgcSplitPane","IgcTabGroupPane","IgcDocumentHost","IgcDockManagerLayout"],"sourceRoot":""}